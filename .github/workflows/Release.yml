name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  test-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Run Tests
        run: python test-main.py

  test-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Run Tests
        run: python test-main.py

  test-windows-x86:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x86'
      - name: Run Tests
        run: python test-main.py

  build-windows-x64:
    needs:
      - test-windows-x64
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install pyinstaller
        run: pip install pyinstaller
      - name: Create exe
        run: pyinstaller main.py --onefile
      - name: Upload exe
        uses: actions/upload-artifact@v2
        with:
          name: main-x64
          path: dist/main.exe

  build-windows-x86:
    needs:
      - test-windows-x86
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x86'
      - name: Install pyinstaller
        run: pip install pyinstaller
      - name: Create exe
        run: pyinstaller main.py --onefile
      - name: Upload exe
        uses: actions/upload-artifact@v2
        with:
          name: main-x86
          path: dist/main.exe

  upload-assets:
    runs-on: ubuntu-latest
    needs: [build-linux, build-win]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: main-x64

      - uses: actions/download-artifact@v1
        with:
          name: main-x86


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Artifact - x64
        id: upload-release-asset-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./main-x64/main.exe
          asset_name: main-64.exe
          asset_content_type: application/x-msdownload

      - name: Upload Release Artifact - x86
        id: upload-release-asset-x86
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./main-x86/main.exe
          asset_name: main-32.exe
          asset_content_type: application/x-msdownload